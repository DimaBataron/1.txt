Для добавления файлов используется команда:
git add readme

Сам файл является архивом, который легко распаковать и вывести на экран, указав полное значение хеша.
git cat-file -p 9f2422325cef705b7682418d05a538d891bad5c8

Для того, чтобы добавить все файлы из текущей директории введите:
git add .

После добавления файлов, все изменения находятся в так называемой staging (или cached)
 area. Это некоторое временнное хранилище, которое используется
 для накопления изменений и из которого создаются собственно версии проектов (commit).
Для просмотра текущего состояния можно воспользоваться командой:
git status

Если вы продолжите вносить изменения в файл readme, 
то после вызова команды git status вы увидите две версии файла.
new file:   readme
modified:   readme
Чтобы добавить новые изменения достаточно повторить команду.
 Команда git add не только добавляет новые файлы,
 но и все изменения файлов, которые были добавлены ранее.
git add readme

Можно отменить добавления файла readme в staging area с помощью команды:
git rm --cached readme

Создание версии проекта

После того, как мы добавили нужные файлы в staging area мы можем создать 
версию проекта. С помощью команды:
git commit -m "comment"

Самую первую версию отменить нельзя. Ее можно только исправить.
 Если вы хотите добавить изменения в последнюю версию, 
то после выполнения команды commit, добавляете необходимые изменения и вызываете:
git commit -m "comment" --amend

Для просмотра списка всех коммитов, воспользуйтесь командой:
git log

Или так:
git log --oneline
Ключ --oneline нужен, чтобы уменьшить количество информации выдаваемой на экран.
 С этим ключем каждый коммит показывается в одну строчку.

Для отмены последнего коммита (кроме самого первого) можно воспользоваться следующей командой:
git reset HEAD~1

Для того чтобы удалить все файлы в папке, которые не относятся к проекту
 и не сохранены в репозитории, можно воспользоваться командой:
git clean -df


2
